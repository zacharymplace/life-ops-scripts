name: Stale Branches Report

on:
  schedule:
    - cron: "12 14 * * 1"   # Mondays 14:12 UTC
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - name: Generate report
        id: gen
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const defaultBranch = (await github.rest.repos.get({ owner, repo })).data.default_branch;

            // Only include branches with a PR merged into default > N days ago
            const mergedOlderThanDays = 14;

            const daysBetween = (a, b) => Math.floor((b - a) / 86400000);
            const now = new Date();

            // Fetch branches (paginate)
            const branches = await github.paginate(
              github.rest.repos.listBranches,
              { owner, repo, per_page: 100 }
            );

            const stale = [];
            for (const br of branches) {
              const name = br.name;
              if (name === defaultBranch) continue;

              // Find a closed, merged PR from this branch into default
              const prs = await github.paginate(github.rest.pulls.list, {
                owner, repo, state: 'closed', head: `${owner}:${name}`, per_page: 50
              });
              const mergedPR = prs.find(pr => pr.merged_at && pr.base.ref === defaultBranch);
              if (!mergedPR) continue;

              const mergedAt = new Date(mergedPR.merged_at);
              const age = daysBetween(mergedAt, now);
              if (age <= mergedOlderThanDays) continue; // skip recent merges

              stale.push({
                name,
                mergedAt: mergedAt.toISOString().slice(0,10),
                age,
                prNumber: mergedPR.number
              });
            }

            // Build markdown
            let body = `## Stale Branches Report (merged > ${mergedOlderThanDays} days)\n` +
                       `Default branch: **${defaultBranch}**  \n` +
                       `Generated: ${now.toISOString().slice(0,10)}\n\n`;

            if (stale.length === 0) {
              body += `No stale branches found 🎉\n`;
            } else {
              body += `| Branch | Merged At | Age (days) | PR | Delete |\n` +
                      `|---|---:|---:|---|---|\n`;
              for (const s of stale) {
                const delURL = `https://github.com/${owner}/${repo}/branches/all?query=${encodeURIComponent(s.name)}`;
                body += `| \`${s.name}\` | ${s.mergedAt} | ${s.age} | #${s.prNumber} | [🗑️ delete](${delURL}) |\n`;
              }
            }

            core.setOutput('body', body);

      - name: Close previous reports and open new dated issue
        uses: actions/github-script@v7
        env:
          REPORT_BODY: ${{ toJSON(steps.gen.outputs.body) }}
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const today = new Date().toISOString().slice(0,10);
            const titlePrefix = "Stale branches report";
            const newTitle = `${titlePrefix} — ${today}`;
            const body  = JSON.parse(process.env.REPORT_BODY);

            // Find and close existing open stale branch reports
            const openIssues = await github.paginate(github.rest.issues.listForRepo, {
              owner, repo, state: 'open', per_page: 100, labels: 'automation'
            });
            const priorReports = openIssues.filter(i => i.title.startsWith(titlePrefix));

            for (const issue of priorReports) {
              if (issue.title === newTitle) continue;
              await github.rest.issues.createComment({
                owner, repo, issue_number: issue.number,
                body: `Superseded by **${newTitle}**. Closing this report.`
              });
              await github.rest.issues.update({
                owner, repo, issue_number: issue.number, state: 'closed'
              });
            }

            // Create the new dated report
            const created = await github.rest.issues.create({
              owner, repo, title: newTitle, body, labels: ["automation"]
            });
            core.info(`Created issue #${created.data.number}`);
